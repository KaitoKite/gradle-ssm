/**/
plugins {
    id 'java'
    id 'war'
    //id 'net.ltgt.apt' version '0.10'
}

group 'com.jimmy'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/"}
    mavenCentral()
    
}

configurations {
    mybatisGenerator
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'org.apache.tomcat:tomcat-servlet-api:8.0.24'
    compile 'jstl:jstl:1.2'
    compile 'org.springframework:spring-beans:5.1.5.RELEASE'
    compile 'org.springframework:spring-context:5.1.5.RELEASE'
    compile 'org.springframework:spring-context-support:5.1.5.RELEASE'
    compile 'org.springframework:spring-web:5.1.5.RELEASE'
    compile 'org.springframework:spring-webmvc:5.1.5.RELEASE'
    compile 'org.springframework:spring-tx:5.1.5.RELEASE'
    compile 'com.alibaba:druid:1.0.15'
    compile 'org.aspectj:aspectjweaver:1.8.6'
    compile 'mysql:mysql-connector-java:5.1.36'
    compile 'org.mybatis:mybatis-spring:1.3.1'
    compile 'org.mybatis:mybatis:3.4.1'
    compile 'org.springframework:spring-jdbc:5.1.5.RELEASE'
    compile 'junit:junit:4.12'
    compile 'org.springframework:spring-test:5.1.5.RELEASE'
    compile 'com.alibaba:fastjson:1.2.31'
    compile 'log4j:log4j:1.2.17'
    compile group: 'org.freemarker', name: 'freemarker', version: '2.3.25-incubating'
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.2'
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
    compile 'org.projectlombok:lombok:1.18.2'
    annotationProcessor 'org.projectlombok:lombok:1.18.2'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.2'
    testCompileOnly 'org.projectlombok:lombok:1.18.2'

    //mybatis逆向工程，这样配置好像不会放到Libraries下面
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.7'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.36'
    mybatisGenerator 'tk.mybatis:mapper:3.3.9'

}

def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/jdbc.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties
}

task mybatisGenerate << {
    def properties = getDbProperties()
    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driver")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
    ant.properties['userId'] = properties.getProperty("jdbc.username")
    ant.properties['password'] = properties.getProperty("jdbc.password")
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = properties.getProperty("modelPackage")
    ant.properties['mapperPackage'] = properties.getProperty("daoPackage")
    ant.properties['sqlMapperPackage'] = properties.getProperty("sqlMapperPackage")
    ant.properties['tableName'] = properties.getProperty("package.tableName")
    ant.properties['entityName'] = properties.getProperty("package.entityName")
    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/mybatis-generator.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
            propertyref(name: 'tableName')
            propertyref(name: 'entityName')
        }
    }
}


allprojects {
    task cleanBuildDir(type: Delete) {
        delete "${projectDir}/build"
        delete "${projectDir}/out"
    }
}